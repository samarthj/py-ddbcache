name: Build Matrix

on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9.x', '3.10.x']
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache-dir
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      - name: Load pip cache
        id: pip-cache
        uses: actions/cache@main
        with:
          path: ${{ steps.pip-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-pip-pdm
          restore-keys: |
            ${{ runner.os }}-pip-pdm
      - name: Install system dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pdm
      - name: Get pdm cache dir
        id: pdm-cache-dir
        shell: bash
        run: |
          echo "::set-output name=dir::$(pdm config cache_dir)"
      - name: Load pdm cache
        id: pdm-cache
        uses: actions/cache@main
        with:
          path: |
            ${{ steps.pdm-cache-dir.outputs.dir }}
            ./.venv
          key: ${{ runner.os }}-pdm-${{ hashFiles('pdm.lock') }}
          restore-keys: |
            ${{ runner.os }}-pdm-
      - name: Update the dependencies using pdm
        run: |
          pdm config parallel_install true
          pdm sync -dG:all --no-self --clean
          pdm update --no-self
          pdm config
          pdm info

      - name: Test with pytest
        run: pdm run test

      - name: Build with pdm
        run: pdm build
